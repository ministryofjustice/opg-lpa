<?xml version="1.0"?>
<psalm
    errorLevel="4"
    resolveFromConfigFile="true"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="https://getpsalm.org/schema/config"
    xsi:schemaLocation="https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd"
    ensureOverrideAttribute="false"
>
    <projectFiles>
        <directory name="module/Application/src" />
        <ignoreFiles>
            <directory name="vendor" />
        </ignoreFiles>
    </projectFiles>

    <issueHandlers>
        <!-- Controllers and their actions are wired magically, not directly -->
        <UnusedClass>
            <errorLevel type="suppress">
                <directory name="module/Application/src/Controller" />
                <directory name="module/Application/src/Controller/Version2" />
                <directory name="module/Application/src/ControllerFactory" />
            </errorLevel>
        </UnusedClass>
        <PossiblyUnusedMethod>
            <errorLevel type="suppress">
                <file name="module/Application/src/Controller/**/*Controller.php" />
                <referencedMethod name="*::*Action" />
            </errorLevel>
        </PossiblyUnusedMethod>

        <!--
            AbstractData defines properties as protected then adds getters for them. This means
            they're available publicly, but Psalm can't understand that.
        -->
        <InaccessibleProperty errorLevel="suppress" />

        <!--
            `final` classes are difficult to mock in tests and all of our code is internal,
            minimising its usefulness
        -->
        <ClassMustBeFinal errorLevel="suppress" />
    </issueHandlers>
</psalm>
