name: trivy-scan
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  filter-changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'packages' output variable
      folders: ${{ steps.filter.outputs.changes }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          service-api: ./service-api
          service-admin: ./service-admin
          service-front: ./service-front
          service-pdf: ./service-pdf
          tests: ./tests
          cypress: ./cypress
          terraform/account: ./terraform/account

  trivy-scan-config:

    name: trivy-scan
    needs: filter-changes
    if: |
      ${{ fromJSON(needs.changes.outputs.folders)[0] }}
    strategy:
      fail-fast: false
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['package1', 'package2'] if both package folders contains changes
        folder: ${{ fromJSON(needs.changes.outputs.folders) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner for IaC
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          ignore-unfixed: true
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          scan-ref: ./${{ matrix.folder }}
          hide-progress: false
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

#  trivy-scan-filesystem:
#    strategy:
#      matrix:
#        folder:
#          - ./service-api
#          - ./service-admin
#          - ./service-front
#          - ./service-pdf
#          - ./service-perfplat
#    name: trivy-scan
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Run Trivy vulnerability scanner on codebase
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: 'fs'
#          ignore-unfixed: true
#          format: 'template'
#          template: '@/contrib/sarif.tpl'
#          output: 'trivy-results.sarif'
#          scan-ref: ${{ matrix.folder }}
#          hide-progress: false
#      - name: Upload Trivy scan results to GitHub Security tab
#        uses: github/codeql-action/upload-sarif@v1
#        with:
#          sarif_file: 'trivy-results.sarif'
