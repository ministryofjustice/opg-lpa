name: "[Workflow] Locust Tests"

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      account_id:
        description: "AWS account ID containing the role to assume for boto commands"
        required: true
        type: string
      front_url:
        description: "URL of the frontend"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID_ACTIONS:
        required: true
      AWS_SECRET_ACCESS_KEY_ACTIONS:
        required: true

jobs:
  locust_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Configure AWS Credentials - Security Group & ECR
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::${{ inputs.account_id }}:role/opg-lpa-ci
          role-duration-seconds: 900
          role-session-name: OPGLPACypressTestsSecurityGroupECR

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/pipeline/ci_ingress/requirements.txt

      - name: Download Terraform Task definition
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: terraform-artifact
          path: /tmp/

      - name: Add GitHub Actions runner Ingress Rule
        run: |
          python scripts/pipeline/ci_ingress/ci_ingress.py /tmp/environment_pipeline_tasks_config.json --add

      - name: Configure AWS Credentials - Cypress / S3Monitor
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::050256574573:role/opg-lpa-ci
          role-duration-seconds: 3600
          role-session-name: OPGLPACypressTestsCypressS3Monitor

      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: node-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - uses: actions/setup-node@3235b876344d2a9aa001b8d1453c930bba69e610 # v3.9.1
        with:
          node-version-file: '.nvmrc'

      - name: Run Locust Tests
        continue-on-error: true
        env:
          DISABLE_SSL_VERIFY: True
        run: |
          pip install boto3 locust beautifulsoup4 faker
          python cypress/s3_monitor.py -c &
          cd locust # note- for now need to run locust from within locust dir as it looks for activation_emails dir relative to this
          locust --headless -f ./locustfile.py --host ${{ inputs.front_url }} -u 5 -r 1 --run-time 2m

      - name: Configure AWS Credentials
        if: always()
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-duration-seconds: 900
          role-to-assume: arn:aws:iam::${{ inputs.account_id }}:role/opg-lpa-ci
          role-session-name: OPGLPACypressTestsSecurityGroupEnd

      - name: Remove GitHub Actions runner Ingress Rule
        if: always()
        run: |
          python scripts/pipeline/ci_ingress/ci_ingress.py /tmp/environment_pipeline_tasks_config.json
