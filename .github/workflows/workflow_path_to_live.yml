name: "[Workflow] Path to Live"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - main
    paths:
      - "service-*/**"
      - "cypress/**"
      - "terraform/**"
      - "scripts/**"
      - ".github/workflows/**"

permissions:
  contents: write
  security-events: write
  pull-requests: read
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  statuses: none

jobs:
  image_tag:
    name: Generate image tags
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.short_sha.outputs.short_sha }}
    steps:
      - name: Set output to short SHA
        id: short_sha
        run: echo "::set-output name=short_sha::${GITHUB_SHA::7}"

  docker_build_scan_push:
    name: Docker Build, Scan and Push
    uses: ./.github/workflows/docker_job.yml
    needs:
      - image_tag
    with:
      tag: ${{ needs.image_tag.outputs.short_sha }}
      branch_name: "main"
    secrets: inherit

  terraform_account_preproduction:
    name: TF Preproduction - Account
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-infrastructure-terraform.yml@da7e79760d7dcc16fe5c7efe8fe3674a8d55e420 # pin@v1.9.0
    with:
      terraform_version: 1.1.2
      terraform_workspace: preproduction
      is_ephemeral: false
      terraform_apply: true
      terraform_directory: ./terraform/account
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
      AWS_ACCESS_KEY_ID_ACTIONS: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
      AWS_SECRET_ACCESS_KEY_ACTIONS: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  terraform_region_preproduction:
    name: TF Preproduction - Region
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-infrastructure-terraform.yml@da7e79760d7dcc16fe5c7efe8fe3674a8d55e420 # pin@v1.9.0
    with:
      terraform_version: 1.1.2
      terraform_workspace: preproduction
      is_ephemeral: false
      terraform_apply: true
      terraform_directory: ./terraform/region
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
      AWS_ACCESS_KEY_ID_ACTIONS: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
      AWS_SECRET_ACCESS_KEY_ACTIONS: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  terraform_environment_preproduction:
    name: TF Preproduction - Environment
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-infrastructure-terraform.yml@da7e79760d7dcc16fe5c7efe8fe3674a8d55e420 # pin@v1.9.0
    with:
      terraform_version: 1.1.2
      terraform_workspace: preproduction
      is_ephemeral: false
      terraform_apply: true
      use_ssh_private_key: true
      terraform_directory: ./terraform/environment
      terraform_variables: "-var container_version=${{ needs.image_tag.outputs.short_sha }}"
      persist_artifacts: true
    needs:
      - docker_build_scan_push
      - image_tag
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
      AWS_ACCESS_KEY_ID_ACTIONS: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
      AWS_SECRET_ACCESS_KEY_ACTIONS: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  # run_preprodution_feedback_db_task:
  #   name: Run preproduction feedbackdb
  #   uses: ./.github/workflows/workflow_feedbackdb.yml
  #   with:
  #     account_id: "987830934591"
  #   needs:
  #     - terraform_environment_preproduction
  #   secrets: inherit

  preprod_terraform_outputs:
    name: Render terraform outputs
    runs-on: ubuntu-latest
    outputs:
      terraform_output_as_json: ${{ steps.terraform_outputs.outputs.terraform_output_as_json }}
    needs:
      - terraform_environment_preproduction
    steps:
    - name: Checkout
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin@v3

    - name: Terraform Outputs from JSON
      id: terraform_outputs
      run: |
        JSON=${{ needs.terraform_environment_preproduction.outputs.terraform_output_as_json }}
        JSON="${JSON//$'\n'/''}"
        JSON="${JSON//$'\r'/''}"
        JSON="${JSON//$'\s+'/''}"
        echo "::set-output name=terraform_output_as_json::$JSON"

  cypress_tests_Signup_StichedPF:
    name: Run Cypress tests - @Signup,@StitchedPF
    uses: ./.github/workflows/cypress_tests.yml
    needs:
      - preprod_terraform_outputs
    with:
      admin_url: https://${{ fromJson(needs.preprod_terraform_outputs.outputs.terraform_output_as_json).admin-fqdn.value }}
      front_url: https://${{ fromJson(needs.preprod_terraform_outputs.outputs.terraform_output_as_json).front-fqdn.value }}
      account_id: "987830934591"
      cypress_tags: "@Signup,@StitchedPF"
    secrets: inherit

  cypress_tests_Signup_StichedHW:
    name: Run Cypress tests - @Signup,@StitchedHW
    uses: ./.github/workflows/cypress_tests.yml
    needs:
      - preprod_terraform_outputs
    with:
      admin_url: https://${{ fromJson(needs.preprod_terraform_outputs.outputs.terraform_output_as_json).admin-fqdn.value }}
      front_url: https://${{ fromJson(needs.preprod_terraform_outputs.outputs.terraform_output_as_json).front-fqdn.value }}
      account_id: "987830934591"
      cypress_tags: "@Signup,@StitchedHW"
    secrets: inherit

  cypress_tests_SignupIncluded:
    name: Run Cypress tests - @SignupIncluded
    uses: ./.github/workflows/cypress_tests.yml
    needs:
      - preprod_terraform_outputs
    with:
      admin_url: https://${{ fromJson(needs.preprod_terraform_outputs.outputs.terraform_output_as_json).admin-fqdn.value }}
      front_url: https://${{ fromJson(needs.preprod_terraform_outputs.outputs.terraform_output_as_json).front-fqdn.value }}
      account_id: "987830934591"
      cypress_tags: "@SignupIncluded"
    secrets: inherit

  # Remaining tests should ultimately just exclude SignUp and anything already done as part of stitched run.
  # TODO CorrespondentReuse needs refactoring so that it can be included as part of the stitchedClone run.
  cypress_tests_Remaining:
    name: Run Cypress tests - Remaining
    uses: ./.github/workflows/cypress_tests.yml
    needs:
      - preprod_terraform_outputs
    with:
      admin_url: https://${{ fromJson(needs.preprod_terraform_outputs.outputs.terraform_output_as_json).admin-fqdn.value }}
      front_url: https://${{ fromJson(needs.preprod_terraform_outputs.outputs.terraform_output_as_json).front-fqdn.value }}
      account_id: "987830934591"
      cypress_tags: "@Signup,not @Signup and not @PartOfStitchedRun and not @StitchedHW and not @StitchedPF and not @StitchedClone and not @CorrespondentReuse and not @SignupIncluded"
    secrets: inherit

  slack_msg_production_deploy_begin:
    name: Annouce Production Deployment
    runs-on: ubuntu-latest
    outputs:
      ts: ${{ steps.slack.outputs.ts }}
    needs:
      - cypress_tests_Signup_StichedPF
      - cypress_tests_Signup_StichedHW
      - cypress_tests_SignupIncluded
      - cypress_tests_Remaining
    steps:
      - id: slack
        uses: slackapi/slack-github-action@936158bbe252e9a6062e793ea4609642c966e302 # pin@v1.21.0
        with:
          channel-id: "C01BDM8T67J"
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Production Deployment",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Status:*\nStarted"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Started by:*\n ${{ github.triggering_actor }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:*\n <https://github.com/ministryofjustice/opg-lpa/commit/${{ github.sha }}|${{ needs.image_tag.outputs.short_sha }}>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/ministryofjustice/opg-lpa/actions/runs/${{github.run_id}}|View workflow>"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN}}

  terraform_account_production:
    name: TF Production - Account
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-infrastructure-terraform.yml@da7e79760d7dcc16fe5c7efe8fe3674a8d55e420 # pin@v1.9.0
    needs: 
      - slack_msg_production_deploy_begin
    with:
      terraform_version: 1.1.2
      terraform_workspace: production
      is_ephemeral: false
      terraform_apply: true
      terraform_directory: ./terraform/account
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
      AWS_ACCESS_KEY_ID_ACTIONS: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
      AWS_SECRET_ACCESS_KEY_ACTIONS: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  terraform_region_production:
    name: TF Production - Region
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-infrastructure-terraform.yml@da7e79760d7dcc16fe5c7efe8fe3674a8d55e420 # pin@v1.9.0
    needs: 
      - slack_msg_production_deploy_begin
    with:
      terraform_version: 1.1.2
      terraform_workspace: production
      is_ephemeral: false
      terraform_apply: true
      terraform_directory: ./terraform/region
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
      AWS_ACCESS_KEY_ID_ACTIONS: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
      AWS_SECRET_ACCESS_KEY_ACTIONS: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  
  terraform_environment_production:
    name: TF Production - Environment
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-infrastructure-terraform.yml@da7e79760d7dcc16fe5c7efe8fe3674a8d55e420 # pin@v1.9.0
    with:
      terraform_version: 1.1.2
      terraform_workspace: production
      is_ephemeral: false
      terraform_apply: true
      terraform_directory: ./terraform/environment
      use_ssh_private_key: true
      persist_artifacts: true
      terraform_variables: "-var container_version=${{ needs.image_tag.outputs.short_sha }}"
    needs:
      - docker_build_scan_push
      - slack_msg_production_deploy_begin
      - image_tag
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
      AWS_ACCESS_KEY_ID_ACTIONS: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
      AWS_SECRET_ACCESS_KEY_ACTIONS: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  # run_production_feedback_db_task:
  #   name: Run production feedbackdb
  #   uses: ./.github/workflows/workflow_feedbackdb.yml
  #   with:
  #     account_id: "980242665824"
  #   needs:
  #     - terraform_environment_production
  #   secrets: inherit

  run_smoke_tests:
    runs-on: ubuntu-latest
    outputs:
      smoke_test_status: ${{ steps.smoke_tests.outputs.smoke_test_status }}
    needs:
      - terraform_environment_production
      - terraform_region_production
      - terraform_account_production
    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin@v3

      - name: Download Terraform Task definition
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # pin@v3
        with:
          name: terraform-artifact
          path: /tmp/

      - name: Setup Python
        uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 # pin@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/pipeline/requirements.txt

      - name: Run smoke tests
        id: smoke_tests
        run: |
          if python scripts/pipeline/healthcheck_test/healthcheck_test.py; then
            echo "::set-output name=smoke_test_status::passed"
          else
            echo "::set-output name=smoke_test_status::failed"
          fi

  slack_msg_production_deployed:
    name: Post-Deployment Slack message
    runs-on: ubuntu-latest
    if: always()
    needs: 
      - slack_msg_production_deploy_begin
      - run_smoke_tests
      - image_tag
    steps:
    - uses: slackapi/slack-github-action@936158bbe252e9a6062e793ea4609642c966e302 # pin@v1.21.0
      if: needs.run_smoke_tests.smoke_test_status = 'passed'
      with:
        channel-id: "C01BDM8T67J"
        update-ts: ${{ needs.slack_msg_production_deploy_begin.outputs.ts }}
        payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Production Deployment",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Status:*\nStarted"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Started by:*\n ${{ github.triggering_actor }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* <https://github.com/ministryofjustice/opg-lpa/commit/${{ github.sha }}|${{ needs.image_tag.outputs.short_sha }}>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/ministryofjustice/opg-lpa/actions/runs/${{github.run_id}}|View workflow>"
                  }
                }
              ]
            }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - uses: slackapi/slack-github-action@936158bbe252e9a6062e793ea4609642c966e302 # pin@v1.21.0
      if: needs.run_smoke_tests.smoke_test_status = 'failed'
      with:
        channel-id: "C01BDM8T67J"
        update-ts: ${{ needs.slack_msg_production_deploy_begin.outputs.ts }}
        payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Production Deployment",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Status:*\nStarted"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Started by:*\n ${{ github.triggering_actor }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* <https://github.com/ministryofjustice/opg-lpa/commit/${{ github.sha }}|${{ needs.image_tag.outputs.short_sha }}>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/ministryofjustice/opg-lpa/actions/runs/${{github.run_id}}|View workflow>"
                  }
                }
              ]
            }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
