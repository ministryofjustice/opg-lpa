# combined log format plus trace ID
log_format static '$trace_id - $remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';

# full format for logging PHP resources
log_format tracing escape=json '{'
                               '"trace_id": "$trace_id", '
                               '"time_local": "$time_local", '
                               '"time_iso8601": "$time_iso8601", '
                               '"timestamp_msec": $msec, '
                               '"remote_addr": "$remote_addr", '
                               '"real_ip": "$http_x_real_ip", '
                               '"real_forwarded_for": "$http_x_forwarded_for", '
                               '"real_forwarded_proto": "$http_x_forwarded_proto", '
                               '"request_id": "$http_x_request_id", '
                               '"remote_user": "$remote_user", '
                               '"request_time": $request_time, '
                               '"request_uri": "$request_uri", '
                               '"status": $status, '
                               '"request": "$request", '
                               '"request_method": "$request_method", '
                               '"http_referrer": "$http_referer", '
                               '"http_user_agent": "$http_user_agent", '
                               '"bytes_sent": $bytes_sent, '
                               '"http_host": "$host", '
                               '"sent_http_location": "$sent_http_location", '
                               '"server_name": "$server_name", '
                               '"server_port": $server_port, '
                               '"upstream_addr": "$upstream_addr", '
                               '"upstream_response_length": "$upstream_response_length", '
                               '"upstream_response_time": "$upstream_response_time", '
                               '"upstream_status": "$upstream_status"'
                               '}';

# Ensures that the trace id always has a value. Used mostly for
# local dev; when on AWS, these ids should be added by the load balancer.
# To simulate the AWS load balancer in dev, we construct an X-Amzn-Trace-Id
# in requests proxied from *-ssl containers to the *-web containers.
# Consequently, the default set here shouldn't be seen in dev. If it
# is seen in dev, it means the *-ssl container is not mocking out the header
# as we expect. If seen in pre/prod, it means we are not getting an
# X-Amzn-Trace-Id header from the AWS load balancer (expected behaviour for
# health check requests).
map $http_x_amzn_trace_id $trace_id {
    "~*Root=" $http_x_amzn_trace_id;

    # If the request has no X-Amzn-Trace-Id, set a default of "-"
    default "-";
}

server {
    listen       80 default_server;
    server_name  _;
    server_tokens off;

    # NB logs are symlinked to stdout/stderr
    access_log /var/log/nginx/access.log static;
    error_log /var/log/nginx/error.log {{ getv "/nginx/log/level" "warn" }};

    gzip on;
    gzip_min_length 100;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript image/svg+xml;

    root /web;


    # security headers
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Strict-Transport-Security "max-age=3600; includeSubDomains";


    location / {
        try_files $uri /index.php$is_args$args;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location ~ "^/assets/" {
        gzip_static on;

        if ($uri ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|htm|html|xml|txt|woff|eot|ttf)$ ){
            expires           24h;
        }

        # Support static assets having a version ID in the path.
        rewrite	^/assets/([0-9]+)/(.*) /assets/$2  break;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        # enable JSON logging of PHP resources
        access_log /var/log/nginx/access.log tracing;

        fastcgi_pass   {{getv "/app/host" }}:{{getv "/app/port" }};
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME /app/public$fastcgi_script_name;

        # add tracing to the request
        fastcgi_param HTTP_X_TRACE_ID $trace_id;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        #internal;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }

    # Comply with https://ministryofjustice.github.io/security-guidance/contact/implement-security-txt/#implementing-securitytxt
    rewrite ^/.well_known/security.txt$ https://raw.githubusercontent.com/ministryofjustice/security-guidance/master/contact/vulnerability-disclosure-security.txt permanent;
}
